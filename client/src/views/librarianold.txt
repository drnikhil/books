<template>
  <v-card color="basil">
    <v-card-title class="text-center justify-center py-6">
      <h1 class="font-weight-bold text-h2 text-basil">Librarian Dashboard</h1>
    </v-card-title>

    <v-tabs v-model="tab" bg-color="transparent" color="basil" grow>
      <v-tab v-for="item in items" :key="item" :value="item">
        {{ item }}
      </v-tab>
    </v-tabs>

    <v-window v-model="tab">
      <v-window-item v-for="item in items" :key="item" :value="item">
        <v-card color="basil" flat>
          <v-card-text v-if="item === 'Section Management'">
           
            <SectionList :sections="sections" />
          </v-card-text>
          <v-card-text v-else-if="item === 'Add Section'">
            <v-form @submit.prevent="addSection">
              <v-text-field v-model="newSection.name" label="Name"></v-text-field>
              <v-textarea v-model="newSection.description" label="Description"></v-textarea>
              <v-btn type="submit" color="success">Add Section</v-btn>
            </v-form>
          </v-card-text>
          <!-- Add other sections as needed -->
          <v-card-text v-else>
            {{ text }}
          </v-card-text>
        </v-card>
      </v-window-item>
    </v-window>
  </v-card>
</template>

<script>
import SectionList from '@/components/SectionList.vue';
import axios from 'axios';

export default {
  components: {
    SectionList,
  },
  data() {
    return {
      tab: 'HOME',
      items: ['Home', 'Section Management', 'Add Section', 'Request/RETURN', 'MISC'],
      text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',
      sections: [],
      newSection: {
        name: '',
        description: ''
      }
    }
  },
  created() {
    this.fetchSections();
  },
  methods: {
    fetchSections() {
      axios.get('http://127.0.0.1:5000/sections')
        .then(response => {
          this.sections = response.data;
        })
        .catch(error => {
          console.error('Error fetching sections:', error);
        });
    },
    addSection() {
      axios.post('http://127.0.0.1:5000/add_section', this.newSection)
        .then(response => {
          this.newSection = {
            name: '',
            description: ''
          };
          this.fetchSections();
          
          
        })
        .catch(error => {
          console.error('Error adding section:', error);
          // Optionally, handle errors and show an error message
        });
    },
    // Add other methods for deleting, updating, and other section-related actions as needed
  }
}
</script>

<style>
.bg-basil {
  background-color: #fffbe6 !important;
}
.text-basil {
  color: #356859 !important;
}
</style>
